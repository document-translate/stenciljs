import{_ as e,o as a,c as o,k as s,a as n,X as t}from"./chunks/framework.319defb2.js";const m=JSON.parse('{"title":"集成开发服务器","description":"集成的 Dev Server 配置","frontmatter":{"description":"集成的 Dev Server 配置"},"headers":[],"relativePath":"docs/config/dev-server.md","filePath":"docs/config/dev-server.md"}'),l={name:"docs/config/dev-server.md"},p=s("h1",{"integrated-dev-server":"",id:"集成开发服务器",tabindex:"-1"},[n("集成开发服务器 "),s("a",{class:"header-anchor",href:"#集成开发服务器","aria-label":'Permalink to "集成开发服务器{integrated-dev-server}"'},"​")],-1),r=t(`<p>为了简化开发，Stencil 附带了一个集成的开发服务器。通过集成构建过程和开发服务器，Stencil 能够大大改善开发体验，而不需要复杂的构建脚本和配置。在应用构建和重新构建的过程中，编译器能够与开发服务器通信，反之亦然。</p><h2 id="hot-module-replacement" tabindex="-1">热模块替换 <a class="header-anchor" href="#hot-module-replacement" aria-label="Permalink to &quot;热模块替换{#hot-module-replacement}&quot;">​</a></h2><p>编译器已经提供了监视模式，但加上开发服务器，它还能更进一步，只重新加载浏览器中发生变化的内容。热模块替换允许应用程序将其状态保持在浏览器内，同时在文件保存后切换出具有更新逻辑的单个组件。</p><h2 id="#style-replacement" tabindex="-1">Style 替换 <a class="header-anchor" href="##style-replacement" aria-label="Permalink to &quot;Style 替换{##style-replacement}&quot;">​</a></h2><p>Web 组件可以带有自己的 css，可以使用 shadow dom，还可以有单独的样式标签。传统上，实时重新加载外部 css 链接通常可以做到这一点，然而，在 shadow root 中更新具有内联样式的组件一直是一个挑战。通过集成的开发服务器，Stencil 能够动态更新所有组件的样式，无论它们是否使用 shadow dom，而不需要刷新页面。</p><h2 id="development-errors" tabindex="-1">开发中的错误 <a class="header-anchor" href="#development-errors" aria-label="Permalink to &quot;开发中的错误{#development-errors}&quot;">​</a></h2><p>当开发过程中发生错误时，例如打印语法错误，Stencil 不仅会在控制台中记录错误和错误来源，还会将错误覆盖在应用程序上，以便于阅读。</p><h2 id="open-in-editor" tabindex="-1">在编辑器中打开 <a class="header-anchor" href="#open-in-editor" aria-label="Permalink to &quot;在编辑器中打开{#open-in-editor}&quot;">​</a></h2><p>当在浏览器中显示开发错误并覆盖项目时，指向源文本的行号是可以点击的，这将直接在你的 IDE 中打开源文件。</p><h2 id="dev-server-config" tabindex="-1">Dev Server 配置 <a class="header-anchor" href="#dev-server-config" aria-label="Permalink to &quot;Dev Server 配置{#dev-server-config}&quot;">​</a></h2><table><thead><tr><th>属性</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td><code>address</code></td><td>开发服务器使用的 IP 地址。默认值是 <code>0.0.0.0</code>，指向本地机器上的所有 IPv4 地址，例如<code>localhost</code>。</td><td><code>0.0.0.0</code></td></tr><tr><td><code>basePath</code></td><td>服务器使用的基础路径。默认为根路径名。</td><td><code>/</code></td></tr><tr><td><code>https</code></td><td>默认情况下，开发服务器通过 http 协议运行。相反，您可以通过提供自己的 SSL 证书和密钥通过 https 运行它(见下面的示例)。</td><td><code>false</code></td></tr><tr><td><code>initialLoadUrl</code></td><td>开发服务器首先打开的 URL。</td><td><code>/</code></td></tr><tr><td><code>logRequests</code></td><td>对服务器的每个请求都会在终端中记录下来。</td><td><code>false</code></td></tr><tr><td><code>openBrowser</code></td><td>默认情况下，启动开发服务器时，会在默认浏览器中打开本地开发 URL。但是，为了防止这个 URL 被打开，请将此值更改为<code>false</code>。</td><td><code>true</code></td></tr><tr><td><code>reloadStrategy</code></td><td>当监视和更新文件时，默认情况下开发服务器将使用 <code>hmr</code> (热模块替换)来更新页面，而无需刷新整个页面。要让页面完全刷新，请使用 <code>pageReload</code>。要禁用任何重载，请使用 <code>null</code>。</td><td><code>hmr</code></td></tr><tr><td><code>port</code></td><td>设置服务器的端口。</td><td><code>3333</code></td></tr></tbody></table><h2 id="example" tabindex="-1">示例 <a class="header-anchor" href="#example" aria-label="Permalink to &quot;示例{#example}&quot;">​</a></h2><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">readFileSync</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">fs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Config</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@stencil/core</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> config</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Config</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">devServer</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">reloadStrategy</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pageReload</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">port</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4444</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">https</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">cert</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">readFileSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cert.pem</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">utf8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">key</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">readFileSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">key.pem</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">utf8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div>`,13),c=[p,r];function d(D,y,F,i,C,A){return a(),o("div",null,c)}const u=e(l,[["render",d]]);export{m as __pageData,u as default};
