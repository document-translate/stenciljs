import{_ as s,o as a,c as n,X as l}from"./chunks/framework.319defb2.js";const F=JSON.parse('{"title":"React 集成","description":"学习如何包装组件，以便人们可以在 React 中使用它们","frontmatter":{"description":"学习如何包装组件，以便人们可以在 React 中使用它们"},"headers":[],"relativePath":"docs/framework-integration/react.md","filePath":"docs/framework-integration/react.md"}'),o={name:"docs/framework-integration/react.md"},p=l(`<h1 id="react-集成" tabindex="-1">React 集成 <a class="header-anchor" href="#react-集成" aria-label="Permalink to &quot;React 集成&quot;">​</a></h1><p><strong>Supports: React v16.7+ • TypeScript 3.7+ • Stencil v2.9.0+</strong></p><p>Stencil 可以为你的 web 组件生成 React 组件包装器。这允许你的 Stencil 组件在 React 应用程序中使用。与标准 web 组件相比，使用 Stencil 的组件包装器的好处包括：</p><ul><li>自定义事件将被正确处理，并正确地在 React 渲染树中传播</li><li>非字符串或数字的属性将被正确地绑定到组件</li></ul><h2 id="setup" tabindex="-1">设置 <a class="header-anchor" href="#setup" aria-label="Permalink to &quot;设置{#setup}&quot;">​</a></h2><h3 id="project-structure" tabindex="-1">项目结构 <a class="header-anchor" href="#project-structure" aria-label="Permalink to &quot;项目结构{#project-structure}&quot;">​</a></h3><p>我们建议在组件库中使用 <a href="https://www.toptal.com/front-end/guide-to-monorepos" target="_blank" rel="noreferrer">monorepo</a> 结构和组件包装器。 你的项目工作区应该包含你的 Stencil 组件库和生成的 React 组件包装库。</p><p>一个项目设置的示例可能看起来类似于：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">top-most-directory/</span></span>
<span class="line"><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">packages/</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stencil-library/</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stencil.config.js</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src/components/</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">react-library/</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src/</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">components/</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">index.ts</span></span></code></pre></div><p>本指南在 monorepo 中使用 Lerna，但你也可以使用其他解决方案，如 Nx、TurboRepo 等。</p><p>要在本教程中使用 Lerna，请全局安装 Lerna:</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group--XQbh" id="tab-c66cDbR" checked="checked"><label for="tab-c66cDbR">npm</label><input type="radio" name="group--XQbh" id="tab-cDuzOEg"><label for="tab-cDuzOEg">yarn</label><input type="radio" name="group--XQbh" id="tab-XfTEEzo"><label for="tab-XfTEEzo">pnpm</label></div><div class="blocks"><div class="language-bash active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--global</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lerna</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">global</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lerna</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--global</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lerna</span></span></code></pre></div></div></div><h4 id="creating-a-monorepo" tabindex="-1">创建一个 monorepo <a class="header-anchor" href="#creating-a-monorepo" aria-label="Permalink to &quot;创建一个 monorepo{#creating-a-monorepo}&quot;">​</a></h4><div class="info custom-block"><p class="custom-block-title">提示</p><p>如果您已经有一个 monorepo，请跳过本节。</p></div><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-bCO9h" id="tab-OjIKsQK" checked="checked"><label for="tab-OjIKsQK">npm</label><input type="radio" name="group-bCO9h" id="tab-rW0sNmB"><label for="tab-rW0sNmB">yarn</label><input type="radio" name="group-bCO9h" id="tab-mvFc6cO"><label for="tab-mvFc6cO">pnpm</label></div><div class="blocks"><div class="language-bash active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># From your top-most-directory/, initialize a workspace</span></span>
<span class="line"><span style="color:#FFCB6B;">lerna</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># install dependencies</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># install typescript and node types</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">typescript</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@types/node</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--save-dev</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># From your top-most-directory/, initialize a workspace</span></span>
<span class="line"><span style="color:#FFCB6B;">lerna</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># install dependencies</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># install typescript and node types</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">typescript</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@types/node</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--dev</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># From your top-most-directory/, initialize a workspace</span></span>
<span class="line"><span style="color:#FFCB6B;">lerna</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># install dependencies</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># install typescript and node types</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">typescript</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@types/node</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--save-dev</span></span></code></pre></div></div></div><h4 id="创建一个-stencil-组件库" tabindex="-1">创建一个 Stencil 组件库 <a class="header-anchor" href="#创建一个-stencil-组件库" aria-label="Permalink to &quot;创建一个 Stencil 组件库&quot;">​</a></h4><div class="info custom-block"><p class="custom-block-title">提示</p><p>如果您已经有了 Stencil 组件库，请跳过本节。</p></div><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-fp8Xh" id="tab-c79qWPz" checked="checked"><label for="tab-c79qWPz">npm</label><input type="radio" name="group-fp8Xh" id="tab-VG7Z9J1"><label for="tab-VG7Z9J1">yarn</label><input type="radio" name="group-fp8Xh" id="tab-u4YUGz6"><label for="tab-u4YUGz6">pnpm</label></div><div class="blocks"><div class="language-bash active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">packages/</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stencil</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">components</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stencil-library</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stencil-library</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Install dependencies</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">packages/</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stencil</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">components</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stencil-library</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stencil-library</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Install dependencies</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">packages/</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stencil</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">components</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stencil-library</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stencil-library</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Install dependencies</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span></span></code></pre></div></div></div><h4 id="创建一个-react-组件库" tabindex="-1">创建一个 React 组件库 <a class="header-anchor" href="#创建一个-react-组件库" aria-label="Permalink to &quot;创建一个 React 组件库&quot;">​</a></h4><div class="info custom-block"><p class="custom-block-title">提示</p><p>如果您已经有了 React 组件库，请跳过本节。</p></div><p>当你第一次创建组件包装器时，你需要有一个 React 库来写入。</p><p>在 monorepo 的根目录下运行以下命令来创建一个 React 组件库:</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-N9s1i" id="tab-5_gdP0U" checked="checked"><label for="tab-5_gdP0U">npm</label><input type="radio" name="group-N9s1i" id="tab-qJ2Abse"><label for="tab-qJ2Abse">yarn</label><input type="radio" name="group-N9s1i" id="tab-9VT4pJb"><label for="tab-9VT4pJb">pnpm</label></div><div class="blocks"><div class="language-bash active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Create a project</span></span>
<span class="line"><span style="color:#FFCB6B;">lerna</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">react-library</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># fill out the prompts accordingly</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">packages/react-library</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Install core dependencies</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">react</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">react-dom</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">typescript</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@types/react</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--save-dev</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Create a project</span></span>
<span class="line"><span style="color:#FFCB6B;">lerna</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">react-library</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># fill out the prompts accordingly</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">packages/react-library</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Install core dependencies</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">react</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">react-dom</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">typescript</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@types/react</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--dev</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Create a project</span></span>
<span class="line"><span style="color:#FFCB6B;">lerna</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">react-library</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># fill out the prompts accordingly</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">packages/react-library</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Install core dependencies</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">react</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">react-dom</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">typescript</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@types/react</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--save-dev</span></span></code></pre></div></div></div><p>Lerna 没有附带 TypeScript 配置。在工作空间的根目录，创建一个<code>tsconfig.json</code>：</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">compilerOptions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">module</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">commonjs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">declaration</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">noImplicitAny</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">removeComments</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">noLib</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">emitDecoratorMetadata</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">experimentalDecorators</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">target</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">es6</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">sourceMap</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">lib</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">es6</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">exclude</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node_modules</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">**/*.spec.ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">**/__tests__/**</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>在你的 <code>react-library</code> 项目中，创建一个特定于项目的 <code>tsconfig.json</code>，它将扩展根配置：</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">extends</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">../../tsconfig.json</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">compilerOptions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">outDir</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./dist</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">lib</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dom</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">es2015</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">module</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">es2015</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">moduleResolution</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">target</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">es2015</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">skipLibCheck</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">jsx</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">react</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">allowSyntheticDefaultImports</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">declarationDir</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./dist/types</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">include</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">lib</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">exclude</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node_modules</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>更新 <code>react-library</code> 中生成的 <code>package.json</code>，在现有配置中添加以下选项：</p><div class="language-diff"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki material-theme-palenight has-diff"><code><span class="line"><span style="color:#A6ACCD;">{</span></span>
<span class="line diff remove"><span style="color:#A6ACCD;">   &quot;main&quot;: &quot;lib/react-library.js&quot;, </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">   &quot;main&quot;: &quot;dist/index.js&quot;, </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">   &quot;module&quot;: &quot;dist/index.js&quot;, </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">   &quot;types&quot;: &quot;dist/types/index.d.ts&quot;, </span></span>
<span class="line"><span style="color:#A6ACCD;">   &quot;scripts&quot;: {</span></span>
<span class="line diff remove"><span style="color:#A6ACCD;">     &quot;test&quot;: &quot;node ./__tests__/react-library.test.js&quot; </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">     &quot;test&quot;: &quot;node ./__tests__/react-library.test.js&quot;, </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">     &quot;build&quot;: &quot;npm run tsc&quot;, </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">     &quot;tsc&quot;: &quot;tsc -p .&quot; </span></span>
<span class="line diff remove"><span style="color:#A6ACCD;">   } </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">   }, </span></span>
<span class="line"><span style="color:#A6ACCD;">   &quot;files&quot;: [</span></span>
<span class="line diff remove"><span style="color:#A6ACCD;">     &quot;lib&quot; </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">     &quot;dist&quot; </span></span>
<span class="line"><span style="color:#A6ACCD;">   ]</span></span>
<span class="line diff add"><span style="color:#A6ACCD;">   &quot;publishConfig&quot;: { </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">     &quot;access&quot;: &quot;public&quot; </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">   }, </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">   &quot;dependencies&quot;: { </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">     &quot;stencil-library&quot;: &quot;*&quot; </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">   } </span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">提示</p><p>Lerna 通过<code>stencil_library</code>依赖来解决内部 Stencil 库依赖。请参阅 Lerna 的文档 <a href="https://lerna.js.org/docs/getting-started#package-dependency-management" target="_blank" rel="noreferrer">包依赖管理</a>了解更多信息。</p></div><h3 id="添加-react-输出目标" tabindex="-1">添加 React 输出目标 <a class="header-anchor" href="#添加-react-输出目标" aria-label="Permalink to &quot;添加 React 输出目标&quot;">​</a></h3><p>安装 <code>@stencil/react-output-target</code> 依赖到你的 Stencil 组件库。</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-2aU6v" id="tab-KHbgMme" checked="checked"><label for="tab-KHbgMme">npm</label><input type="radio" name="group-2aU6v" id="tab--ROd5fi"><label for="tab--ROd5fi">yarn</label><input type="radio" name="group-2aU6v" id="tab-qmN0IH9"><label for="tab-qmN0IH9">pnpm</label></div><div class="blocks"><div class="language-bash active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Install dependency</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@stencil/react-output-target</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--save-dev</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Install dependency</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@stencil/react-output-target</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--save-dev</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Install dependency</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@stencil/react-output-target</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--save-dev</span></span></code></pre></div></div></div><p>在项目的 <code>stencil.config.ts</code>, 添加 <code>reactOutputTarget</code> 配置到 <code>outputTargets</code> 数组中：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">reactOutputTarget</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@stencil/react-output-target</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> config</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Config</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">namespace</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">stencil-library</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">outputTargets</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// By default, the generated proxy components will</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// leverage the output from the \`dist\` target, so we</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// need to explicitly define that output alongside the</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// React target</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dist</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">esmLoaderPath</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">../loader</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">reactOutputTarget</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">componentCorePackage</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">stencil-library</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">proxiesFile</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">../react-library/lib/components/stencil-generated/index.ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>proxiesFile</code> 是所有 React 组件包装器生成的文件的相对路径。您将替换文件路径以匹配项目的结构和各自的名称。你可以生成任何文件名而不是 <code>components.ts</code>。</p><p><code>componentCorePackage</code> 应该与你的 Stencil 项目的 <code>package.json</code> 中的 <code>name</code> 字段匹配。</p></div><p>有关每个输出目标选项的详细信息，请参阅下面的 <a href="#api">API 部分</a>。</p><p>您现在可以构建您的 Stencil 组件库来生成组件包装器。</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-oXGkw" id="tab-FWjzi2L" checked="checked"><label for="tab-FWjzi2L">npm</label><input type="radio" name="group-oXGkw" id="tab-dsXKhiB"><label for="tab-dsXKhiB">yarn</label><input type="radio" name="group-oXGkw" id="tab-WtU_5oh"><label for="tab-WtU_5oh">pnpm</label></div><div class="blocks"><div class="language-bash active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Build the library and wrappers</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Build the library and wrappers</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Build the library and wrappers</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span></span></code></pre></div></div></div><p>如果构建成功，你将在 React 组件库中的 <code>proxiesFile</code> 参数指定的位置看到新生成的文件。</p><h3 id="将这些组件添加到-react-组件库的入口文件中" tabindex="-1">将这些组件添加到 React 组件库的入口文件中 <a class="header-anchor" href="#将这些组件添加到-react-组件库的入口文件中" aria-label="Permalink to &quot;将这些组件添加到 React 组件库的入口文件中&quot;">​</a></h3><p>为了让生成的文件在 React 组件库及其使用者中可用，你需要从入口文件中导出所有内容。首先，将 <code>react-library.js</code> 重命名为 <code>index.ts</code>。然后，修改内容以匹配以下内容:</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./components/stencil-generated</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="registering-custom-elements" tabindex="-1">注册自定义元素 <a class="header-anchor" href="#registering-custom-elements" aria-label="Permalink to &quot;注册自定义元素{#registering-custom-elements}&quot;">​</a></h3><p>要为懒加载(hydrated) bundle 注册 web 组件，你需要暴露一个方法，用于注册底层 Stencil 生成的自定义元素，以便 React 代理组件使用。 最简单的方法是修改 React 库的入口文件，以重新导出模板加载器的 <code>defineCustomElements()</code> 方法。 在你的 React 库的入口文件( <code>packages/react-library/lib/index.ts</code> )中，添加以下内容:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight has-diff"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./components/stencil-generated</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line diff add"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">defineCustomElements</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">stencil-library/loader</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span></code></pre></div><h3 id="link-your-packages-optional" tabindex="-1">Link Your Packages (Optional) <a class="header-anchor" href="#link-your-packages-optional" aria-label="Permalink to &quot;Link Your Packages (Optional)&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">提示</p><p>如果你已经使用了 monorepo 工具 (Lerna, Nx, etc.), 请跳过本节。</p></div><p>在你成功构建本地版本的 React 组件库之前，你需要将 Stencil 包链接到 React 包。</p><p>在你的 Stencil 项目目录中，运行以下命令：</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-j4-48" id="tab-Rfuol7W" checked="checked"><label for="tab-Rfuol7W">npm</label><input type="radio" name="group-j4-48" id="tab-zYc0xn7"><label for="tab-zYc0xn7">yarn</label><input type="radio" name="group-j4-48" id="tab-fYZGXSM"><label for="tab-fYZGXSM">pnpm</label></div><div class="blocks"><div class="language-bash active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Link the working directory</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">link</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Link the working directory</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">link</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Link the working directory</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">link</span></span></code></pre></div></div></div><p>在你的 React 组件库目录下，运行以下命令：</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-hNJia" id="tab-rehbPzx" checked="checked"><label for="tab-rehbPzx">npm</label><input type="radio" name="group-hNJia" id="tab-nKLPyMK"><label for="tab-nKLPyMK">yarn</label><input type="radio" name="group-hNJia" id="tab-fwwSWIZ"><label for="tab-fwwSWIZ">pnpm</label></div><div class="blocks"><div class="language-bash active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Link the package name</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">link</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">name-of-your-stencil-package</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Link the package name</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">link</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">name-of-your-stencil-package</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Link the package name</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">link</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">name-of-your-stencil-package</span></span></code></pre></div></div></div><p>你的 Stencil 包的名称应该与 Stencil 组件库的 <code>package.json</code> 中的 <code>name</code> 属性匹配。</p><p>你的组件库现在已经链接在一起了。你可以在 Stencil 组件库中进行更改，然后运行 <code>npm run build</code> 将更改传播到 React 组件库。</p><div class="info custom-block"><p class="custom-block-title">提示</p><p>作为 <code>npm link</code> 的替代方法，你也可以使用模板组件库的相对路径运行 <code>npm install</code>。然而，这个策略会修改你的 <code>package_json</code>，所以确保你不提交这些更改很重要。</p></div><h2 id="consumer-usage" tabindex="-1">Consumer Usage <a class="header-anchor" href="#consumer-usage" aria-label="Permalink to &quot;Consumer Usage&quot;">​</a></h2><h3 id="creating-a-consumer-react-app" tabindex="-1">Creating a Consumer React App <a class="header-anchor" href="#creating-a-consumer-react-app" aria-label="Permalink to &quot;Creating a Consumer React App&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">提示</p><p>如果你已经有了一个 React 应用，请跳过本节。</p></div><p>在 <code>packages/</code> 目录下，运行以下命令生成一个 React 应用：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Create the React app</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">vite@latest</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">my-app</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--template</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">react-ts</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># of if using yarn</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">vite</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">my-app</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--template</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">react-ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./my-app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># install dependencies</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># or if using yarn</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span></span></code></pre></div><p>你还需要链接你的 React 组件库作为依赖。这一步使您的 React 应用程序能够正确解析从 React 组件库中导入的内容。</p><p>通过修改你的 React 应用程序的 <code>package.json</code> 来包含以下内容，很容易实现：</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dependencies</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">react-library</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">*</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="使用-react-包装器组件" tabindex="-1">使用 React 包装器组件 <a class="header-anchor" href="#使用-react-包装器组件" aria-label="Permalink to &quot;使用 React 包装器组件&quot;">​</a></h3><p>本节将介绍使用 React 组件包装器的开发者如何使用你的包和组件包装器。</p><p>在使用 React 代理组件之前，你需要构建 React 组件库。在 <code>packages/react-library</code> 中运行:</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-AB9WO" id="tab-wJxfBdb" checked="checked"><label for="tab-wJxfBdb">npm</label><input type="radio" name="group-AB9WO" id="tab-cAA2XB1"><label for="tab-cAA2XB1">yarn</label><input type="radio" name="group-AB9WO" id="tab-1c85VId"><label for="tab-1c85VId">pnpm</label></div><div class="blocks"><div class="language-bash active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span></span></code></pre></div></div></div><p>要在 React 应用程序中使用 React 组件库，请在需要使用组件的文件中从 React 组件库中导入组件。</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// App.tsx</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./App.css</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">MyComponent</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">defineCustomElements</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">react-library</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">defineCustomElements</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">App</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> (</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">className</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">App</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">MyComponent</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">first</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Your</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">last</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#F07178;">  )</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> App</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="componentcorepackage" tabindex="-1">componentCorePackage <a class="header-anchor" href="#componentcorepackage" aria-label="Permalink to &quot;componentCorePackage&quot;">​</a></h3><p><strong>Optional</strong></p><p><strong>Default: The <code>components.d.ts</code> file in the Stencil project&#39;s <code>package.json</code> types field</strong></p><p><strong>Type: <code>string</code></strong></p><p>消费者可以使用的 Stencil 包的名称(即 Stencil 组件库的 <code>package.json</code> 中的 <code>name</code> 属性的值)。 这用于在编译期间为组件编写正确的导入。</p><p>运行以下命令生成一个入门 Stencil 项目:</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-dBENV" id="tab-uPsw3RU" checked="checked"><label for="tab-uPsw3RU">npm</label><input type="radio" name="group-dBENV" id="tab-8pAXfOD"><label for="tab-8pAXfOD">yarn</label><input type="radio" name="group-dBENV" id="tab-PTh74rK"><label for="tab-PTh74rK">pnpm</label></div><div class="blocks"><div class="language-bash active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stencil</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">component</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">my-component-lib</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stencil</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">component</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">my-component-lib</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stencil</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">component</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">my-component-lib</span></span></code></pre></div></div></div><p><code>componentCorePackage</code> 将被设置为：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// stencil.config.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> config</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Config</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">...,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">outputTargets</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">reactOutputTarget</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">componentCorePackage</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">my-component-lib</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// ... additional config options</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>导入路径如下所示：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">defineCustomElement</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">defineMyComponent</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">my-component-lib/components/my-component.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">提示</p><p>尽管此字段是可选的，但 <em>强烈</em> 建议始终定义它，以避免在组合其他 API 参数时无法正确生成路径的潜在问题。</p></div><h3 id="customelementsdir" tabindex="-1">customElementsDir <a class="header-anchor" href="#customelementsdir" aria-label="Permalink to &quot;customElementsDir&quot;">​</a></h3><p><strong>Optional</strong></p><p><strong>Default: &#39;dist/components&#39;</strong></p><p><strong>Type: <code>string</code></strong></p><p>如果 <a href="#includeimportcustomelements">includeImportCustomElements</a> 为 <code>true</code>，此选项可用于指定生成的自定义元素所在的目录。 只有当 <code>dist-custom-elements</code> 输出目标上的 <code>dir</code> 字段被设置为默认目录以外的目录时，才需要设置此值。</p><h3 id="excludecomponents" tabindex="-1">excludeComponents <a class="header-anchor" href="#excludecomponents" aria-label="Permalink to &quot;excludeComponents&quot;">​</a></h3><p><strong>Optional</strong></p><p><strong>Default: <code>[]</code></strong></p><p><strong>Type: <code>string[]</code></strong></p><p>这可以让你指定不想生成 React 包装组件的组件标签名。如果你需要编写特定于框架的组件版本，这很有用。 例如，在 Ionic 框架中，它用于路由组件(如选项卡)，以便 Ionic 框架可以更好地与 React Router 集成。</p><h3 id="includedefinecustomelements" tabindex="-1">includeDefineCustomElements <a class="header-anchor" href="#includedefinecustomelements" aria-label="Permalink to &quot;includeDefineCustomElements&quot;">​</a></h3><p><strong>Optional</strong></p><p><strong>Default: <code>true</code></strong></p><p><strong>Type: <code>boolean</code></strong></p><p>如果为 <code>true</code>，所有的 Web 组件将自动注册到自定义元素注册表。这只能在延迟加载 Web 组件时使用，当 <code>includeImportCustomElements</code> 为 <code>true</code> 时将不起作用。</p><h3 id="includeimportcustomelements" tabindex="-1">includeImportCustomElements <a class="header-anchor" href="#includeimportcustomelements" aria-label="Permalink to &quot;includeImportCustomElements&quot;">​</a></h3><p><strong>Optional</strong></p><p><strong>Default: <code>undefined</code></strong></p><p><strong>Type: <code>boolean</code></strong></p><p>如果为 <code>true</code>，当组件在用户的应用程序内部被导入时，输出目标将导入自定义元素实例并将其注册到自定义元素注册表。 这只能用于<a href="./../output-targets/custom-elements.html">自定义元素包</a>，而不能用于惰性加载组件。</p><h3 id="includepolyfills" tabindex="-1">includePolyfills <a class="header-anchor" href="#includepolyfills" aria-label="Permalink to &quot;includePolyfills&quot;">​</a></h3><p><strong>Optional</strong></p><p><strong>Default: <code>true</code></strong></p><p><strong>Type: <code>boolean</code></strong></p><p>如果为 <code>true</code>， polyfills 将自动导入，<code>applyPolyfills</code> 函数将在你的代理文件中被调用。 这只能在延迟加载 Web 组件时使用，当启用 <code>includeImportCustomElements</code> 时将不起作用。</p><h3 id="loaderdir" tabindex="-1">loaderDir <a class="header-anchor" href="#loaderdir" aria-label="Permalink to &quot;loaderDir&quot;">​</a></h3><p><strong>Optional</strong></p><p><strong>Default: <code>/dist/loader</code></strong></p><p><strong>Type: <code>string</code></strong></p><p>在构建的项目中，<code>defineCustomElements</code> 辅助方法存在的路径。此选项仅在启用 <code>includeDefineCustomElements</code> 时使用。</p><h3 id="proxiesfile" tabindex="-1">proxiesFile <a class="header-anchor" href="#proxiesfile" aria-label="Permalink to &quot;proxiesFile&quot;">​</a></h3><p><strong>Required</strong></p><p><strong>Type: <code>string</code></strong></p><p>此参数允许您命名包含在编译过程中生成的所有组件包装器定义的文件。这是您应该在 React 项目中导入的第一个文件。</p><h2 id="faq-s" tabindex="-1">FAQ&#39;s <a class="header-anchor" href="#faq-s" aria-label="Permalink to &quot;FAQ&#39;s&quot;">​</a></h2><h3 id="我必须使用-dist-输出目标吗" tabindex="-1">我必须使用 dist 输出目标吗? <a class="header-anchor" href="#我必须使用-dist-输出目标吗" aria-label="Permalink to &quot;我必须使用 dist 输出目标吗?&quot;">​</a></h3><p>不！默认情况下，输出目标将使用 <code>dist</code> 输出，但也可以使用 <code>dist-custom-elements</code> 的输出。</p><p>为此，只需在输出目标配置中设置 <code>includeImportCustomElements</code> 选项，并确保将<a href="./../output-targets/custom-elements.html">自定义元素输出目标</a>添加到模板配置的输出目标数组中:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// stencil.config.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> config</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Config</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">...,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">outputTargets</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// Needs to be included</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dist-custom-elements</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">reactOutputTarget</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">componentCorePackage</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">component-library</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">proxiesFile</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{path to your proxy file}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// This is what tells the target to use the custom elements output</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">includeImportCustomElements</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>现在，所有生成的导入都将指向自定义元素输出的默认目录。如果你使用 <code>dir</code> 属性为 <code>dist-custom-elements</code> 指定了一个不同的目录，你还需要为 Vue 的输出目标指定该目录。 查看 <a href="#customelementsdir">API 部分</a>以获取更多信息。</p><p>此外，当生成的组件模块被引导时，所有的 Web 组件都将被自动定义。</p><h3 id="什么是最好的-event-名字的写法" tabindex="-1">什么是最好的 event 名字的写法? <a class="header-anchor" href="#什么是最好的-event-名字的写法" aria-label="Permalink to &quot;什么是最好的 event 名字的写法?&quot;">​</a></h3><p>最初用模板书写的事件名称不应该包含特殊字符。尝试使用驼峰格式的事件名称来实现框架之间的互操作性。</p>`,126),e=[p];function t(c,r,i,y,D,C){return a(),n("div",null,e)}const A=s(o,[["render",t]]);export{F as __pageData,A as default};
