import{_ as e,o as t,c as a,X as r}from"./chunks/framework.319defb2.js";const f=JSON.parse('{"title":"框架集成","description":"框架集成","frontmatter":{"description":"框架集成"},"headers":[],"relativePath":"docs/framework-integration/overview.md","filePath":"docs/framework-integration/overview.md"}'),i={name:"docs/framework-integration/overview.md"},o=r('<h1 id="框架集成" tabindex="-1">框架集成 <a class="header-anchor" href="#框架集成" aria-label="Permalink to &quot;框架集成&quot;">​</a></h1><p>Stencil 的主要目标是消除使用特定框架 API 编写组件的需求。 它通过使用跨所有现代浏览器的标准化 web 平台 api 来实现这一点。 使用浏览器提供的底层组件模型(所有框架都是基于它构建的)允许 Stencil 组件在框架内或没有框架的情况下工作。</p><p>将 web 组件直接集成到现有应用程序中有时会很棘手，因为框架对普通 web 组件的支持各不相同。 为了适应各种问题，Stencil 团队创建了框架包装器，使过程更简单。</p><p>框架包装器像输出目标一样配置，并发出一个本机库，就像你的组件最初使用这些框架中的任何一个编写一样：</p><ul><li><a href="./angular.html">Angular</a></li><li><a href="./react.html">React</a></li><li><a href="./vue.html">Vue</a></li><li><a href="./ember.html">Ember (Community)</a></li></ul><p>通过使用 Stencil 绑定，你只需要构建一次组件，就可以让 Stencil 生成 Angular/React/Vue 库。 这样，组件的使用者就可以享受他们所选择的框架的所有特性。</p>',6),n=[o];function l(c,s,_,m,p,d){return t(),a("div",null,n)}const u=e(i,[["render",l]]);export{f as __pageData,u as default};
